use selo::prelude::*;

fn main() {
    let a = MultiPolygon(vec![Polygon(
        Ring::new(vec![
            Vec2::new(48.874702, -50.965385),
            Vec2::new(48.10331, -49.9898),
            Vec2::new(48.398254, -48.51507),
            Vec2::new(44.473213, -47.83443),
            Vec2::new(44.51859, -47.516796),
            Vec2::new(40.094414, -46.7454),
            Vec2::new(40.02635, -47.085724),
            Vec2::new(37.961735, -46.7454),
            Vec2::new(36.532383, -55.07193),
            Vec2::new(46.968903, -56.886974),
            Vec2::new(47.195786, -55.457626),
            Vec2::new(48.239437, -54.70892),
        ]),
        MultiRing(vec![]),
    )]);
    let b = Ring::new(vec![
        Vec2::new(44.473213, -47.834427),
        Vec2::new(48.10331, -49.989796),
        Vec2::new(48.398247, -48.515068),
    ]);

    println!("a: {:?}", a.map(|p| p * 16.0));
    println!("b: {:?}", b.map(|p| p * 16.0));

    println!("{:?}", a.intersection(&b));
    // [[[F32Point { x: 44.473213, y: -47.834427 }, F32Point { x: 44.473213, y: -47.834427 }, F32Point { x: 44.473213, y: -47.834427 }]], [[F32Point { x: 44.47322, y: -47.83443 }, F32Point { x: 48.398247, y: -48.51507 }, F32Point { x: 48.10331, y: -49.989796 }]]]
}
